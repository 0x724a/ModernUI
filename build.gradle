buildscript {
    repositories {
        jcenter()
        maven {
            name "forge"
            url "https://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'java-library'
apply plugin: 'maven-publish'

version = "${minecraft_version}-${mod_version}-universal"
group = 'icyllis.modernui'
archivesBaseName = 'ModernUI'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: 'snapshot', version: '20200317-1.15.1'

    accessTransformer(file('src/main/resources/META-INF/accesstransformer.cfg'))

    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                modernui {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                modernui {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'modern', '--all', '--output', file('src/generated/resources/')

            mods {
                modernui {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    flatDir {
        // local libs
        dirs 'libs'
    }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}:api")

    runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}")
}

processResources {
    // this will ensure that this task is redone when the versions change.
     inputs.property 'version', mod_version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'

        // replace version
        expand 'version': mod_version
    }

    // copy everything else except the mods.toml and .psd
    from(sourceSets.main.resources.srcDirs) {
        exclude 'META-INF/mods.toml'
    }
}

jar {
    manifest {
        attributes([
            "Specification-Title": "ModernUI",
            "Specification-Vendor": "BloCamLimb",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"BloCamLimb",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

/*def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}*/

sourceSets {
    api
    main {
        compileClasspath += sourceSets.api.output
        runtimeClasspath += sourceSets.api.output
    }
}

jar {
    from sourceSets.main.output
    from sourceSets.api.output
}

task apiJar(type: Jar) {
    archiveName = "ModernUI-${minecraft_version}-${mod_version}-api.jar"
    from sourceSets.api.output
    from sourceSets.api.allJava
}

artifacts {
    archives apiJar
}