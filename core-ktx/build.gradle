import org.jetbrains.kotlin.gradle.dsl.JvmTarget
import org.jetbrains.kotlin.gradle.tasks.KotlinCompilationTask

apply plugin: 'org.jetbrains.kotlin.jvm'

kotlin.jvmToolchain(17)

dependencies {
    api project(':ModernUI-Core')
}

// for IntelliJ IDEA, you must set up this in IDEA Settings, Kotlin Compiler
tasks.withType(KotlinCompilationTask).configureEach {
    compilerOptions{
        jvmTarget.set(JvmTarget.JVM_17)
        freeCompilerArgs.addAll(
                '-Xno-call-assertions',
                '-Xno-param-assertions',
                '-Xno-receiver-assertions',
        )
    }
}

jar {
    manifest {
        attributes(
                "Specification-Title": project.name,
                "Specification-Vendor": "BloCamLimb",
                "Specification-Version": "1",
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Implementation-Vendor": "BloCamLimb",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
        )
    }
}

publishing {
    publications {
        mavenCoreKTX(MavenPublication) {
            from components.java
            artifactId = project.name
            groupId = project.group
            version = project.version

            pom {
                artifactId = project.name
                groupId = project.group
                version = project.version
                name = rootProject.name
                packaging = 'pom'
                scm {
                    url = 'https://github.com/BloCamLimb/ModernUI.git'
                }
                issueManagement {
                    system = 'github'
                    url = 'https://github.com/BloCamLimb/ModernUI/issues'
                }
                licenses {
                    license {
                        name = 'LGPL-3.0-or-later'
                        url = 'https://www.gnu.org/licenses/lgpl-3.0.en.html'
                        distribution = 'repo'
                    }
                }
            }
        }
    }
}