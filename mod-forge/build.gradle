plugins {
    id 'forgified-fabric-loom'
    id 'maven-publish'
    id 'com.matthewprenger.cursegradle'
    id 'com.github.johnrengelman.shadow'
}

configurations {
    shadow
}

architectury {
    platformSetupLoomIde()
}

loom {
    silentMojangMappingsLicense()
    dataGen {
        mod 'modernui'
    }
}

repositories {
    maven {
        name "Progwml6 maven"
        url "https://dvs1.progwml6.com/files/maven/"
        content {
            includeGroup 'mezz.jei'
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
    mappings minecraft.officialMojangMappings()
    forge "net.minecraftforge:forge:${rootProject.minecraft_version}-${rootProject.forge_version}"

    modCompileOnly "mezz.jei:jei-${rootProject.minecraft_version}:${rootProject.jei_version}:api"
    modRuntime "mezz.jei:jei-${rootProject.minecraft_version}:${rootProject.jei_version}"

    compile "com.github.ben-manes.caffeine:caffeine:${rootProject.caffeine_version}"
    compile "com.vladsch.flexmark:flexmark:${rootProject.flexmark_version}"

    shadow "com.github.ben-manes.caffeine:caffeine:${rootProject.caffeine_version}"
    shadow "com.vladsch.flexmark:flexmark:${rootProject.flexmark_version}"

    compile('org.apache.maven:maven-artifact') {
        version {
            strictly '3.6.3'
        }
    }

    compile(project(":core")) {
        transitive = false
    }
    compileOnly(project(path: ":ModernUI-Common")) {
        transitive = false
    }
    runtimeOnly(project(path: ":ModernUI-Common", configuration: "transformDevelopmentForge")) {
        transitive = false
    }
    shadow(project(path: ":ModernUI-Common", configuration: "transformProductionForge")) {
        transitive = false
    }
    shadow(project(":core")) {
        transitive = false
    }
}

shadowJar {
    exclude "fabric.mod.json"

    configurations = [project.configurations.shadow]
    classifier "shadow"

    dependencies {
        exclude 'icu4j-59.1.jar'
        exclude 'commons-logging-1.2.jar'
    }

    relocate 'com.google.errorprone.annotations', 'icyllis.annotations'
    relocate 'org.checkerframe', 'icyllis.checkerframe'
    relocate 'com.github.benmanes.caffeine', 'icyllis.caffeine'
    relocate 'com.vladsch.flexmark', 'icyllis.flexmark'
    relocate 'org.intellij.lang.annotations', 'icyllis.annotations'
    relocate 'org.jetbrains.annotations', 'icyllis.annotations'

    exclude 'META-INF/CHANGES'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/LICENSE**'
    exclude 'META-INF/NOTICE**'
    exclude 'META-INF/README**'
    exclude 'META-INF/maven/**'
}

remapJar {
    dependsOn(shadowJar)
    input.set(shadowJar.archiveFile)
    archiveClassifier.set("universal")
}

if (project.hasProperty("jks")) {
    remapJar.doLast {
        ant.signjar(
                keypass: project.getProperty("jks_keypass"),
                storepass: project.getProperty("jks_pass"),
                jar: remapJar.archiveFile.get(),
                storetype: 'jks',
                keystore: project.getProperty("jks"),
                alias: project.getProperty("jks_alias")
        )
    }
}

processResources {
    inputs.property 'version', mod_version

    filesMatching("META-INF/mods.toml") {
        expand 'version': mod_version
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "ModernUI",
                "Specification-Vendor"    : "BloCamLimb",
                "Specification-Version"   : "2",
                "Implementation-Title"    : rootProject.name,
                "Implementation-Version"  : rootProject.version,
                "Implementation-Vendor"   : "BloCamLimb",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConnector"          : "icyllis.modernui.forge.MixinConnector"
        ])
    }
}

publishing {
    repositories {
        maven {
            name 'IzzelAliz'
            url 'https://maven.izzel.io/releases'
            credentials {
                username = project.getProperty("maven_user")
                password = project.getProperty("izzel_maven_token")
            }
        }
    }
    publications {
        mavenForge(MavenPublication) {
            artifact(sourcesJar.archivePath) {
                builtBy build
            }
            /*from components.java
            artifactId = project.name
            groupId = project.group
            version = project.version
            pom {
                artifactId = project.name
                groupId = project.group
                version = project.version
                name = rootProject.name
                packaging = 'jar'
                scm {
                    url = 'https://github.com/BloCamLimb/ModernUI.git'
                }
                issueManagement {
                    system = 'github'
                    url = 'https://github.com/BloCamLimb/ModernUI/issues'
                }
                licenses {
                    license {
                        name = 'LGPL-3.0-or-later'
                        distribution = 'repo'
                    }
                }
            }*/
        }
    }
}
